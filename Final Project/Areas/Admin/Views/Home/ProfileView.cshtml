@using Final_Project.ModelView
@using Microsoft.AspNetCore.Identity
@model RegisterMV

@inject UserManager<UserSigin> userManager;
@{
    var user = await userManager.GetUserAsync(User);
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
<link href="~/css/setpicture.css" rel="stylesheet" />
<div class="">
    <div class=" py-5">
        <div class="row d-flex justify-content-center">
            <div class="col-md-8  cont " style=" width:90%;">
                <div class="card">
                    <div class="card-header bg-light">
                        <div class="row align-items-center">
                            <div class="col-md-3 text-center">
                                <div class=" position-relative">
                                    <div style="overflow:visible; border:none;" class=" profile-img-container  position-relative">
                                        <div style="overflow:hidden;  "  class="profile-img-container position-relative">

                                        <img src="#" id="finalImage" alt="Alternate Text" class="profile-img object-fit-cover" style="display:none;" />
                                        <div id="PrevImage" class=" position-relative w-100 h-100 ">

                                        @if(user.Imageurl is not null){

                                            <img src="@user.Imageurl"
                                                
                                             alt="Profile" class="profile-img object-fit-cover"
                                             >
                                        }
                                        else
                                        {
                                                    <div class="bg-primary  w-100 h-100 text-white  p-2 d-flex align-items-center justify-content-center ">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-user"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" /><path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2" /></svg>
                                            </div>
                                        }
                                        </div>
                                            <div class=" w-100 h-100 position-absolute  overflow-hidden top-0" style="left:0 ;  cursor:pointer; z-index:100;">
                                                <input onchange="previewImage(event)"   type="file" id="imageInput" accept="/*image" class=" h-100  position-absolute top:0;" style="display:block; opacity:0; left:-80%; cursor:pointer; width:200%;" />

                                            </div>
                                        </div>

                                    <div  class="position-absolute w-100 h-100   top-0 d-flex align-items-end justify-content-start " style="right:5px; overflow:visible;">
                                        <span class="bg-white  text-black rounded-circle   " style="padding:10px;">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-tabler icons-tabler-outline icon-tabler-user"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0" /><path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2" /></svg>
                                        </span>
                                    </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-7 mt-3 mt-md-0 text-center text-md-start">
                                <h2 class="mb-1">
                                    <span id="displayFirstName">@user.FName</span> <span id="displayLastName">@user.LName</span>
                                </h2>
                                <p class="text-muted">@user.Email</p>
                            </div>
                            <div class="col-md-2 text-center text-md-end mt-3 mt-md-0">
                                <button id="editProfileBtn" class="btn btn-outline-primary edit-profile-button">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                                         viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round" class="edit-icon">
                                        <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                        <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                                    </svg>
                                    <span class="d-none d-md-inline ms-md-2">Edit</span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-4 mb-md-0">
                                <h4 class="border-bottom pb-2 mb-3">Contact Information</h4>

                                <div class="d-flex align-items-center mb-3">
                                    <div class="icon-container me-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round" class="text-primary">
                                            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                                            <circle cx="12" cy="7" r="4"></circle>
                                        </svg>
                                    </div>
                                    <div>
                                        <small class="text-muted">Full Name</small>
                                        <p class="mb-0"><span id="fullNameDisplay">@user.FName @user.LName</span></p>
                                    </div>
                                </div>

                                <div class="d-flex align-items-center mb-3">
                                    <div class="icon-container me-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round" class="text-primary">
                                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z">
                                            </path>
                                            <polyline points="22,6 12,13 2,6"></polyline>
                                        </svg>
                                    </div>
                                    <div>
                                        <small class="text-muted">Email</small>
                                        <p class="mb-0" id="emailDisplay">@user.Email</p>
                                    </div>
                                </div>

                                <div class="d-flex align-items-center">
                                    <div class="icon-container me-3">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round" class="text-primary">
                                            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z">
                                            </path>
                                        </svg>
                                    </div>
                                    <div>
                                        <small class="text-muted">Phone</small>
                                        <p class="mb-0" id="phoneDisplay">@user.PhoneNumber</p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <h4 class="border-bottom pb-2 mb-3">About Me</h4>
                                <div class="d-flex">
                                    <div class="icon-container me-3 mt-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"
                                             viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                             stroke-linecap="round" stroke-linejoin="round" class="text-primary">
                                            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z">
                                            </path>
                                            <polyline points="14 2 14 8 20 8"></polyline>
                                            <line x1="16" y1="13" x2="8" y2="13"></line>
                                            <line x1="16" y1="17" x2="8" y2="17"></line>
                                            <polyline points="10 9 9 9 8 9"></polyline>
                                        </svg>
                                    </div>
                                    <div>
                                        <small class="text-muted">Address</small>
                                        <p class="mt-1" id="bioDisplay">
                                            @user.Address
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div class="modal fade flex justify-content-center align-content-center w-100 h-100"  id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" >
        <div class="modal-content">
            <div class="modal-header bg-light">
                <h5 class="modal-title fw-bold" id="editProfileModalLabel">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="profileForm" method="post" enctype="multipart/form-data">
                    <div class="row g-3">
                        <!-- Left Column -->
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                <input  asp-for="FName" class="form-control"
                                       placeholder="First Name" value="@user.FName"  autofocus>
                                <label asp-for="FName" class="text-muted">First Name</label>
                                <div class="invalid-feedback">Please enter your first name</div>
                            </div>

                            <div class="form-floating mb-3">
                                <input  asp-for="LName" class="form-control" 
                                        placeholder="Last Name" value="@user.LName" >
                                <label asp-for="LName" class="text-muted">Last Name</label>
                                <div class="invalid-feedback">Please enter your last name</div>
                            </div>

                            <div class="form-floating mb-3">
                                <input  asp-for="Email" class="form-control"  value="@user.Email" 
                                       placeholder="Email" >
                                <label asp-for="Email" class="text-muted">Email</label>
                                <div class="invalid-feedback">Please enter a valid email</div>
                            </div>
                        </div>

                        <!-- Right Column -->
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                <input  asp-for="PhoneNumber" class="form-control" 
                                       placeholder="Phone Number" value="@user.PhoneNumber">
                                <label asp-for="PhoneNumber"  class="text-muted">Phone Number</label>
                            </div>

                            <div class="form-floating mb-3">
                                <input  asp-for="Address" class="form-control" 
                                       placeholder="Address" value="@user.Address">
                                <label asp-for="Address" class="text-muted">Address</label>
                            </div>

                            <div class="form-floating mb-3">
                                <button class="form-control">Change Password</button>
                           
                            </div>
                         
                        </div>
                    </div>

                    <div class="modal-footer border-top-0 pt-4">
                        <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary px-4">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>




<!-- Toast Notification -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 5">
    <div id="profileToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Profile updated</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            Your profile has been updated successfully.
        </div>
    </div>
</div>


<div class="modal fade" id="imageModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content bg-black text-light" style="border-radius:20px;">
            <div class="modal-header border-0 d-flex justify-content-between">
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" style="margin-left:0px !important;"></button>
                <h5 class="modal-title text-center">Crop Image</h5>
                <div></div>
            </div>
            <div class="modal-body d-flex flex-column align-items-center">
                <div class="cropper-container">
                    <img id="cropImage" class="w-100 h-100 object-fit-contain">
                </div>
                <button class="btn btn-outline-light mt-3" onclick="document.getElementById('imageInput').click()">Change Image</button>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveCroppedImage()">Next</button>
            </div>
        </div>
    </div>
</div>


<script>

      function previewImage(input) {
        if (input.files && input.files[0]) {
            const reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('profileImagePreview').src = e.target.result;
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
    document.addEventListener('DOMContentLoaded', function () {
        const editProfileModal = new bootstrap.Modal(document.getElementById('editProfileModal'));

        document.getElementById('editProfileBtn').addEventListener('click', function () {
            editProfileModal.show();
        });

        document.getElementById('editProfileModal').addEventListener('hidden.bs.modal', function () {
        });
    });
</script>


<script>
    let cropper;
    const cropImage = document.getElementById('cropImage');

    function initCropper() {
        if (cropper) cropper.destroy();
        cropper = new Cropper(cropImage, {
            aspectRatio: 1,
            viewMode: 1,
            background: false,
            guides: false,
            dragMode: 'move',
            cropBoxResizable: false,
            cropBoxMovable: false,
            autoCropArea: 1,
            ready() {
                // Ensure the crop box is circular
                document.querySelector('.cropper-container .cropper-crop-box').style.borderRadius = '50%';
                document.querySelector('.cropper-container .cropper-view-box').style.borderRadius = '50%';
            }
        });
    }

    function previewImage(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('cropImage').src = e.target.result;
                new bootstrap.Modal(document.getElementById('imageModal')).show();
                setTimeout(initCropper, 500);
            };
            reader.readAsDataURL(file);
        }
    }

    function saveCroppedImage() {
        const croppedCanvas = cropper.getCroppedCanvas({ width: 150, height: 150 });
        croppedCanvas.toBlob(blob => {
            const file = new File([blob], 'profile.jpg', { type: 'image/jpeg' });
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            document.getElementById('imageInput').files = dataTransfer.files;
            document.getElementById('finalImage').src = croppedCanvas.toDataURL();
            document.getElementById('PrevImage').style.display = 'block';

            // document.getElementById('finalImage').style.display = 'block';
            // document.getElementById('svgIcon').style.display = 'none';
            const imageModal = bootstrap.Modal.getInstance(document.getElementById('imageModal'));
            document.getElementsByClassName("modal-backdrop ")[0].style.display="none";
            if (imageModal) imageModal.hide();
        }, 'image/jpeg');
    }
</script>

<!-- Cropper.js -->
@* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> *@
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>